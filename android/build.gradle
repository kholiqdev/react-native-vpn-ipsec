// android/build.gradle

def safeExtGet(prop, fallback) {
    rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
}

buildscript {
    // The Android Gradle plugin is only required when opening the android folder stand-alone.
    // This avoids unnecessary downloads and potential conflicts when the library is included as a
    // module dependency in an application project.
    // ref: https://docs.gradle.org/current/userguide/tutorial_using_tasks.html#sec:build_script_external_dependencies
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        // For downloading prebuilt libs
        classpath("de.undercouch:gradle-download-task:5.0.1")
    }
    if (project == rootProject) {
        repositories {
            google()
            mavenCentral()
        }
        dependencies {
            classpath("com.android.tools.build:gradle:7.2.1")
        }
    }
}
apply plugin: 'maven-publish'
apply plugin: 'de.undercouch.download'


// Download prebuilt native libs.
task downloadNaticeLib(type: Download) {
    src 'https://github.com/mstfmedeni/react-native-vpn-ipsec/download/strongswan_libs_v5.8.1.zip'
    dest "$buildDir/native.zip"
}

task getNativeFile(dependsOn: downloadNaticeLib, type: Copy) {
    from zipTree("$buildDir/native.zip")
    into "src/main/libs"
}

// Automatically download native libs before build when doesn't exist.
tasks.whenTaskAdded {
    task ->
        if (task.name == "preBuild" && !(file('./src/main/libs').exists())) {
            preBuild.dependsOn getNativeFile
        }
}

apply plugin: 'com.android.library'

android {
    compileSdk 32

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 32
        versionCode 1
        versionName "1.0"
    }
    lintOptions {
        abortOnError false
    }

    sourceSets.main {
        jni.srcDirs = [] // Disables the default ndk-build call (with on-the-fly Android.mk files)
        jniLibs.srcDir 'src/main/libs'
    }

    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }
}

repositories {
    // ref: https://www.baeldung.com/maven-local-repository
    mavenLocal()
    maven {
        // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm
        url "$rootDir/../node_modules/react-native/android"
    }
    maven {
        // Android JSC is installed from npm
        url "$rootDir/../node_modules/jsc-android/dist"
    }
    google()
    mavenCentral()
}

dependencies {
    //noinspection GradleDynamicVersion
    implementation "com.facebook.react:react-native:${safeExtGet("reactNative", "+")}" // from node_modules
    implementation 'androidx.core:core-ktx:1.8.0'
    def appcompat_version = "1.5.1"

    implementation "androidx.appcompat:appcompat:$appcompat_version"
    // For loading and tinting drawables on older versions of the platform
    implementation "androidx.appcompat:appcompat-resources:$appcompat_version"}

def configureReactNativePom(def pom) {
    def packageJson = new groovy.json.JsonSlurper().parseText(file('../package.json').text)

    pom.project {
        name packageJson.title
        artifactId packageJson.name
        version = packageJson.version
        group = "com.sijav.reactnativeipsecvpn"
        description packageJson.description
        url packageJson.repository.baseUrl

        licenses {
            license {
                name packageJson.license
                url packageJson.repository.baseUrl + '/blob/master/' + packageJson.licenseFilename
                distribution 'repo'
            }
        }

        developers {
            developer {
                id packageJson.author.username
                name packageJson.author.name
            }
        }
    }
}

